apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

// below: load the desired values from custom.properties in order to be injected into BuildConfig and Res
// the values in custom.properties must not contain quotes otherwise the parsed values here will contain quotes
Properties properties = new Properties()
properties.load(project.rootProject.file("custom.properties").newDataInputStream())
def buildPackage = properties.getProperty("packageName", "")
def buildApplicationId = buildPackage
def signingKeyStorePath = properties.getProperty("signingKeyStorePath", "")
def signingKeyStorePassword = properties.getProperty("signingKeyStorePassword", "")
def signingKeyAlias = properties.getProperty("signingKeyAlias", "")
def signingKeyPassword = properties.getProperty("signingKeyPassword", "")

android {
    buildToolsVersion "29.0.3"
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    signingConfigs {
        Sign4Release {
            keyAlias signingKeyAlias
            keyPassword signingKeyPassword
            storeFile file(signingKeyStorePath)
            storePassword signingKeyStorePassword
        }
    }
    compileSdkVersion 29
    defaultConfig {
        // below: manifest placeholders
        manifestPlaceholders = [buildPackage: buildPackage]
        applicationId buildApplicationId
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 20012223
        versionName '3.0'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testApplicationId "${applicationId}.test"
        signingConfig signingConfigs.Sign4Release
        // below: inject the desired values into BuildConfig and Res
        // the string values have to be wrapped in quotes because the value in local.properties does not have quotes
        buildConfigField "String", "BUILD_PACKAGE", "\"$buildPackage\""
        resValue "string", "buildPackage", buildPackage
        // below: fix multi-locale support
        resConfigs "en", "en-rGB", "en-rUS", "zh", "zh-rCN", "ru", "ru-rRU", "es", "es-rES", "es-rUS", "ar", "it", "it-rIT", "pt", "pt-rPT", "th", "th-rTH", "vi", "vi-rVN", "fr", "fr-rFR"
    }
    flavorDimensions "arch"
    productFlavors {
        full {
            dimension "arch"
        }
        arm {
            dimension "arch"
            ndk{
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
        x86 {
            dimension "arch"
            ndk{
                abiFilters "x86", "x86_64"
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.mortal'
            debuggable true
            jniDebuggable false
            signingConfig signingConfigs.Sign4Release
            renderscriptDebuggable false
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
        }
        release {
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.Sign4Release
            renderscriptDebuggable false
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    dexOptions {
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding.enabled = true
    viewBinding.enabled = true
}

def kotlin_version = "1.3.72"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core:1.3.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.4'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.wear:wear:1.0.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.preference:preference-ktx:1.1.1"

    implementation 'com.google.android.material:material:1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.google.android.support:wearable:2.7.0'
    compileOnly 'com.google.android.wearable:wearable:2.7.0'

    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0"
}
