<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2020 Clifford Liu
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.madness.collision">

    <uses-feature
        android:name="android.software.live_wallpaper"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.bluetooth"
        android:required="false" />
<!--
    <uses-feature
        android:name="android.hardware.location"
        android:required="false" />
-->

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        tools:ignore="ScopedStorage" />
    <uses-permission
        android:name="android.permission.PACKAGE_USAGE_STATS"
        tools:ignore="ProtectedPermissions" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!-- <uses-permission android:name="android.permission.READ_CALENDAR" /> -->
    <!-- <uses-permission android:name="android.permission.WRITE_CALENDAR" /> -->
    <!--<uses-permission android:name="android.permission.WAKE_LOCK" />-->
    <!-- query apps on Android 11, declared in the manifest of api_viewing module -->
    <!--<uses-permission android:name="android.permission.QUERY_ALL_PACKAGES"/>-->
    <!-- Legacy shortcut -->
    <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <!-- initiate device discovery or manipulate Bluetooth settings -->
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <!-- a Bluetooth scan can be used to gather information about the location of the user -->
    <!-- on API level 26+, you can use the CompanionDeviceManager -->
    <!-- to perform a scan of nearby companion devices on behalf of your app -->
    <!-- without requiring the location permission -->
    <!--<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />-->

    <queries>
        <!-- check if QQ is installed -->
        <package android:name="com.tencent.mobileqq" />
        <!-- check if WeChat is installed -->
        <package android:name="com.tencent.mm" />
        <!-- check if Alipay is installed -->
        <package android:name="com.eg.android.AlipayGphone" />
    </queries>

    <application
        android:name=".main.MainApplication"
        android:allowBackup="true"
        android:description="@string/appDesc"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:networkSecurityConfig="@xml/network_security_config"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/LaunchScreen"
        tools:ignore="GoogleAppIndexingWarning,UnusedAttribute">

        <!-- Activities -->
        <activity
            android:name=".main.MainActivity"
            android:enabled="true"
            android:label="@string/app_name"
            android:launchMode="singleInstance">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name=".versatile.ApkSharing"
            android:enabled="true"
            android:excludeFromRecents="true"
            android:icon="@mipmap/ic_apk_sharing"
            android:label="@string/activityApkSharing">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="application/vnd.android.package-archive" />
            </intent-filter>
        </activity>
        <activity
            android:name=".versatile.TextProcessingActivity"
            android:enabled="true"
            android:excludeFromRecents="true"
            android:label="@string/activityTextProcessingApp">
            <intent-filter>
                <action android:name="android.intent.action.PROCESS_TEXT" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="text/plain" />
            </intent-filter>
        </activity>
        <activity
            android:name=".versatile.ApiViewingSearchActivity"
            android:enabled="true"
            android:excludeFromRecents="true"
            android:label="@string/activity_av_search">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="text/plain" />
            </intent-filter>
        </activity>

        <activity
            android:name=".unit.themed_wallpaper.ConfigActivity"
            android:enabled="true"
            android:excludeFromRecents="true"
            android:exported="true" />

        <activity
            android:name=".main.ImmortalActivity"
            android:enabled="true">
            <intent-filter>
                <action android:name="${applicationId}.IMMORTALITY" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <!--
        <activity android:name=".settings.SettingsActivity">
            <intent-filter>
                <action android:name="android.intent.action.APPLICATION_PREFERENCES" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        -->
        <activity
            android:name=".versatile.BarcodeScannerActivity"
            android:enabled="true"
            android:excludeFromRecents="true"
            android:theme="@style/AppTheme.Transparent"/>
        <activity
            android:name=".qs.PrefActivity"
            android:enabled="true"
            android:excludeFromRecents="true">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE_PREFERENCES" />
            </intent-filter>
        </activity>
<!--        enabled by default to resolve desktop icon changed to app icon after restart issue-->
        <activity
            android:name=".unit.we_chat_evo.InstantWeChatActivity"
            android:enabled="false"
            android:excludeFromRecents="true"
            android:launchMode="singleInstance"
            android:icon="@mipmap/ic_tencent_mm"
            android:label="@string/Launcher_WeChat"
            android:roundIcon="@mipmap/ic_tencent_mm_round">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.shortcuts"
                android:resource="@xml/wechat_shortcuts" />
        </activity> <!-- Tile Services -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:enabled="true"
            android:authorities="${applicationId}.fileProvider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>
        <receiver
            android:name=".versatile.AppInfoWidget"
            android:enabled="true"
            android:label="@string/developertools_appinfowidget">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                <action android:name="${buildPackage}.AppInfoWidget.ACTION_CLICK_PARENT" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/app_info_widget_info" />
        </receiver>
        <service
            android:name=".unit.themed_wallpaper.ThemedWallpaperService"
            android:enabled="true"
            android:label="@string/twService"
            android:permission="android.permission.BIND_WALLPAPER">
            <intent-filter>
                <action android:name="android.service.wallpaper.WallpaperService" />
            </intent-filter>

            <meta-data
                android:name="android.service.wallpaper"
                android:resource="@xml/config_themed_wallpaper" />
        </service>
        <service
            android:name=".qs.TileServiceApiViewer"
            android:enabled="false"
            android:icon="@drawable/res_android_robot_head"
            android:label="@string/apiViewer"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>
        <service
            android:name=".qs.TileServiceAudioTimer"
            android:enabled="false"
            android:icon="@drawable/ic_timer_24"
            android:label="@string/unit_audio_timer"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>
        <service
            android:name=".qs.TileServiceBarcodeScanner"
            android:enabled="false"
            android:icon="@drawable/ic_alipay_tile"
            android:label="@string/tileBarCodeScanner"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>
        <service
            android:name=".qs.TileServiceBarcodeScannerMm"
            android:enabled="false"
            android:icon="@drawable/ic_wechat_tile"
            android:label="@string/tileBarCodeScanner"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>
        <service
            android:name=".qs.TileServiceMonthData"
            android:enabled="false"
            android:icon="@drawable/ic_data_usage_24"
            android:label="@string/tileData"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>
        <service
            android:name=".util.NotificationActions"
            android:enabled="true" />
        <service
            android:name=".versatile.ScreenCapturingService"
            android:enabled="true"
            android:foregroundServiceType="mediaProjection"
            tools:ignore="UnusedAttribute" />
        <service
            android:name=".unit.audio_timer.AudioTimerService"
            android:enabled="true"/>
        <service
            android:name=".unit.audio_timer.NotificationActions"
            android:enabled="true"/>
        <!-- Device controls -->
        <service
            android:name=".versatile.MyControlService"
            android:label="@string/app_device_controls"
            android:permission="android.permission.BIND_CONTROLS">
            <intent-filter>
                <action android:name="android.service.controls.ControlsProviderService" />
            </intent-filter>
        </service>
    </application>

</manifest>